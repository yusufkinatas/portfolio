"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  projectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectCollection
  resumePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ResumePageCollection
  skillListCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SkillListCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
The Circle scalar type represents a circle, defined by the coordinates of its center and a radius. The Circle type is used to represent a searchable area together with the '_within_circle' filter.
"""
scalar Circle

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/experience)
"""
type Experience implements Entry {
  company(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  coordinates(locale: String): Location
  linkedFrom(allowedLocales: [String]): ExperienceLinkingCollections
  sys: Sys!
  title(locale: String): String
  year(locale: String): String
}

type ExperienceCollection {
  items: [Experience]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ExperienceFilter {
  AND: [ExperienceFilter]
  OR: [ExperienceFilter]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  coordinates_exists: Boolean
  coordinates_within_circle: Circle
  coordinates_within_rectangle: Rectangle
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  year: String
  year_contains: String
  year_exists: Boolean
  year_in: [String]
  year_not: String
  year_not_contains: String
  year_not_in: [String]
}

type ExperienceLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  resumePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ResumePageCollection
}

enum ExperienceOrder {
  company_ASC
  company_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
  year_ASC
  year_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Location {
  lat: Float
  lon: Float
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/person)
"""
type Person implements Entry {
  contactText(locale: String): PersonContactText
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): PersonDescription
  linkedFrom(allowedLocales: [String]): PersonLinkingCollections
  name(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PersonCollection {
  items: [Person]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PersonContactText {
  json: JSON!
  links: PersonContactTextLinks!
}

type PersonContactTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PersonContactTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PersonContactTextLinks {
  assets: PersonContactTextAssets!
  entries: PersonContactTextEntries!
}

type PersonDescription {
  json: JSON!
  links: PersonDescriptionLinks!
}

type PersonDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PersonDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PersonDescriptionLinks {
  assets: PersonDescriptionAssets!
  entries: PersonDescriptionEntries!
}

input PersonFilter {
  AND: [PersonFilter]
  OR: [PersonFilter]
  contactText_contains: String
  contactText_exists: Boolean
  contactText_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PersonLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PersonOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/project)
"""
type Project implements Entry {
  categories(locale: String): [String]
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): ProjectDescription
  imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  linkedFrom(allowedLocales: [String]): ProjectLinkingCollections
  logo(locale: String, preview: Boolean): Asset
  name(locale: String): String
  primaryColor(locale: String): String
  slug(locale: String): String
  sys: Sys!
  techTagsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectTechTagsCollection
  urLsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectUrLsCollection
  youtubeVideoId(locale: String): String
}

type ProjectCollection {
  items: [Project]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ProjectDescription {
  json: JSON!
  links: ProjectDescriptionLinks!
}

type ProjectDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ProjectDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ProjectDescriptionLinks {
  assets: ProjectDescriptionAssets!
  entries: ProjectDescriptionEntries!
}

input ProjectFilter {
  AND: [ProjectFilter]
  OR: [ProjectFilter]
  categories_contains_all: [String]
  categories_contains_none: [String]
  categories_contains_some: [String]
  categories_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  imagesCollection_exists: Boolean
  logo_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  primaryColor: String
  primaryColor_contains: String
  primaryColor_exists: Boolean
  primaryColor_in: [String]
  primaryColor_not: String
  primaryColor_not_contains: String
  primaryColor_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  techTags: cfTechTagNestedFilter
  techTagsCollection_exists: Boolean
  urLs: cfProjectUrlNestedFilter
  urLsCollection_exists: Boolean
  youtubeVideoId: String
  youtubeVideoId_contains: String
  youtubeVideoId_exists: Boolean
  youtubeVideoId_in: [String]
  youtubeVideoId_not: String
  youtubeVideoId_not_contains: String
  youtubeVideoId_not_in: [String]
}

type ProjectLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  projectPageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectPageCollection
}

enum ProjectOrder {
  name_ASC
  name_DESC
  primaryColor_ASC
  primaryColor_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  youtubeVideoId_ASC
  youtubeVideoId_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/projectPage)
"""
type ProjectPage implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProjectPageLinkingCollections
  projectsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectPageProjectsCollection
  sys: Sys!
  topCategoriesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectPageTopCategoriesCollection
}

type ProjectPageCollection {
  items: [ProjectPage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ProjectPageFilter {
  AND: [ProjectPageFilter]
  OR: [ProjectPageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  projects: cfProjectNestedFilter
  projectsCollection_exists: Boolean
  sys: SysFilter
  topCategories: cfTechTagNestedFilter
  topCategoriesCollection_exists: Boolean
}

type ProjectPageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ProjectPageOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ProjectPageProjectsCollection {
  items: [Project]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ProjectPageTopCategoriesCollection {
  items: [TechTag]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ProjectTechTagsCollection {
  items: [TechTag]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ProjectUrLsCollection {
  items: [ProjectUrl]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/projectUrl)
"""
type ProjectUrl implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProjectUrlLinkingCollections
  sys: Sys!
  title(locale: String): String
  type(locale: String): String
  url(locale: String): String
}

type ProjectUrlCollection {
  items: [ProjectUrl]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ProjectUrlFilter {
  AND: [ProjectUrlFilter]
  OR: [ProjectUrlFilter]
  Type: String
  Type_contains: String
  Type_exists: Boolean
  Type_in: [String]
  Type_not: String
  Type_not_contains: String
  Type_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

type ProjectUrlLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  projectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectCollection
}

enum ProjectUrlOrder {
  Type_ASC
  Type_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  experience(id: String!, locale: String, preview: Boolean): Experience
  experienceCollection(limit: Int = 100, locale: String, order: [ExperienceOrder], preview: Boolean, skip: Int = 0, where: ExperienceFilter): ExperienceCollection
  person(id: String!, locale: String, preview: Boolean): Person
  personCollection(limit: Int = 100, locale: String, order: [PersonOrder], preview: Boolean, skip: Int = 0, where: PersonFilter): PersonCollection
  project(id: String!, locale: String, preview: Boolean): Project
  projectCollection(limit: Int = 100, locale: String, order: [ProjectOrder], preview: Boolean, skip: Int = 0, where: ProjectFilter): ProjectCollection
  projectPage(id: String!, locale: String, preview: Boolean): ProjectPage
  projectPageCollection(limit: Int = 100, locale: String, order: [ProjectPageOrder], preview: Boolean, skip: Int = 0, where: ProjectPageFilter): ProjectPageCollection
  projectUrl(id: String!, locale: String, preview: Boolean): ProjectUrl
  projectUrlCollection(limit: Int = 100, locale: String, order: [ProjectUrlOrder], preview: Boolean, skip: Int = 0, where: ProjectUrlFilter): ProjectUrlCollection
  resumePage(id: String!, locale: String, preview: Boolean): ResumePage
  resumePageCollection(limit: Int = 100, locale: String, order: [ResumePageOrder], preview: Boolean, skip: Int = 0, where: ResumePageFilter): ResumePageCollection
  skillList(id: String!, locale: String, preview: Boolean): SkillList
  skillListCollection(limit: Int = 100, locale: String, order: [SkillListOrder], preview: Boolean, skip: Int = 0, where: SkillListFilter): SkillListCollection
  techTag(id: String!, locale: String, preview: Boolean): TechTag
  techTagCollection(limit: Int = 100, locale: String, order: [TechTagOrder], preview: Boolean, skip: Int = 0, where: TechTagFilter): TechTagCollection
}

"""
The Rectangle scalar type represents a rectangle, defined by the coordinates of its top left and bottom right corners. The Rectangle type is used to represent a searchable area together with the '_within_rectangle' filter.
"""
scalar Rectangle

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/resumePage)
"""
type ResumePage implements Entry {
  contentfulMetadata: ContentfulMetadata!
  experiencesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ResumePageExperiencesCollection
  linkedFrom(allowedLocales: [String]): ResumePageLinkingCollections
  resumePdf(locale: String, preview: Boolean): Asset
  skillList1(locale: String, preview: Boolean): SkillList
  skillList2(locale: String, preview: Boolean): SkillList
  skillList3(locale: String, preview: Boolean): SkillList
  skillList4(locale: String, preview: Boolean): SkillList
  sys: Sys!
}

type ResumePageCollection {
  items: [ResumePage]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ResumePageExperiencesCollection {
  items: [Experience]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ResumePageFilter {
  AND: [ResumePageFilter]
  OR: [ResumePageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  experiences: cfExperienceNestedFilter
  experiencesCollection_exists: Boolean
  resumePdf_exists: Boolean
  skillList1: cfSkillListNestedFilter
  skillList1_exists: Boolean
  skillList2: cfSkillListNestedFilter
  skillList2_exists: Boolean
  skillList3: cfSkillListNestedFilter
  skillList3_exists: Boolean
  skillList4: cfSkillListNestedFilter
  skillList4_exists: Boolean
  sys: SysFilter
}

type ResumePageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ResumePageOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/skillList)
"""
type SkillList implements Entry {
  contentfulMetadata: ContentfulMetadata!
  icon(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): SkillListLinkingCollections
  skills(locale: String): [String]
  sys: Sys!
  title(locale: String): String
}

type SkillListCollection {
  items: [SkillList]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SkillListFilter {
  AND: [SkillListFilter]
  OR: [SkillListFilter]
  contentfulMetadata: ContentfulMetadataFilter
  icon_exists: Boolean
  skills_contains_all: [String]
  skills_contains_none: [String]
  skills_contains_some: [String]
  skills_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type SkillListLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  resumePageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ResumePageCollection
}

enum SkillListOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
[See type definition](https://app.contentful.com/spaces/fydf0o2ery42/content_types/techTag)
"""
type TechTag implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): TechTagLinkingCollections
  name(locale: String): String
  slug(locale: String): String
  sys: Sys!
}

type TechTagCollection {
  items: [TechTag]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TechTagFilter {
  AND: [TechTagFilter]
  OR: [TechTagFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type TechTagLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  projectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectCollection
  projectPageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ProjectPageCollection
}

enum TechTagOrder {
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input cfExperienceNestedFilter {
  AND: [cfExperienceNestedFilter]
  OR: [cfExperienceNestedFilter]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  coordinates_exists: Boolean
  coordinates_within_circle: Circle
  coordinates_within_rectangle: Rectangle
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  year: String
  year_contains: String
  year_exists: Boolean
  year_in: [String]
  year_not: String
  year_not_contains: String
  year_not_in: [String]
}

input cfProjectNestedFilter {
  AND: [cfProjectNestedFilter]
  OR: [cfProjectNestedFilter]
  categories_contains_all: [String]
  categories_contains_none: [String]
  categories_contains_some: [String]
  categories_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  imagesCollection_exists: Boolean
  logo_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  primaryColor: String
  primaryColor_contains: String
  primaryColor_exists: Boolean
  primaryColor_in: [String]
  primaryColor_not: String
  primaryColor_not_contains: String
  primaryColor_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  techTagsCollection_exists: Boolean
  urLsCollection_exists: Boolean
  youtubeVideoId: String
  youtubeVideoId_contains: String
  youtubeVideoId_exists: Boolean
  youtubeVideoId_in: [String]
  youtubeVideoId_not: String
  youtubeVideoId_not_contains: String
  youtubeVideoId_not_in: [String]
}

input cfProjectUrlNestedFilter {
  AND: [cfProjectUrlNestedFilter]
  OR: [cfProjectUrlNestedFilter]
  Type: String
  Type_contains: String
  Type_exists: Boolean
  Type_in: [String]
  Type_not: String
  Type_not_contains: String
  Type_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

input cfSkillListNestedFilter {
  AND: [cfSkillListNestedFilter]
  OR: [cfSkillListNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  icon_exists: Boolean
  skills_contains_all: [String]
  skills_contains_none: [String]
  skills_contains_some: [String]
  skills_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfTechTagNestedFilter {
  AND: [cfTechTagNestedFilter]
  OR: [cfTechTagNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}